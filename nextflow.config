params {

    fastq               =   "*_{1,2}.fastq.gz"
    assemblies          =   false
    assembly_loc        =   "assemblies/*.fasta"
    species             =   "Burkholderia_pseudomallei"
    patientMetaData     =   "${baseDir}/Reports/data/patientMetaData.csv"
    gwas                =   false
	notrim              =   true
    matrix              =   true
    annotate            =   true
    mixtures            =   false
    phylogeny           =   false
    antibiotic_res      =   true
    strain              =   "all"
    tech                =   "Illumina"
    pairing             =   "PE"
    window              =   10000
    indel_merge         =   true
    tri_tetra_allelic   =   false
    size                =   1000000
    phred               =   "-phred33"
    org                 =   "haploid"
    executor            =   "local"
    delly               =   true
	fast                =   true
}

includeConfig 'configs/gatk.config'
conda.enabled = true

process {

    if(params.executor != "local") {
        conda = "$CONDA_PREFIX"
    }
    executor = params.executor

    errorStrategy = "retry"
	maxRetries = 4
	
	withLabel: art {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = "8h"
	}
	
    withLabel: card {
        cpus = 1
        memory = "4G"
        time = "8h"
    }

    withLabel: index {
        cpus = 1
        memory = "4G"
        time = "8h"
    }

    withLabel: ardap_default {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = "24h"
    }

    withLabel: alignment {
        cpus = 4
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
	withLabel: trimmomatic {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
	withLabel: markduplicates {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
    withLabel: gatk_haplo {
        cpus = 4
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
	withLabel: gatk {
        cpus = 4
        memory = { 4.GB * task.attempt }
        time = "24h"
    }

    withLabel: snpeff {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = "24h"
    }

    withLabel: pindel {
        cpus = 2
        memory = { 4.GB * task.attempt }
        time = "96h"
    }

    withLabel: genomic_queries {
        cpus = 1
        memory = "4G"
        time = "8h"
    }

    withLabel: card_queries {
        cpus = 1
        memory = "4G"
        time = "2h"
    }

    withLabel: report {
        cpus = 1
        memory = "4G"
        time = "2h"
    }

	withLabel: master_vcf {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
	withLabel: snp_matrix {
        cpus = 1
        memory = { 4.GB * task.attempt }
        time = "24h"
    }
}

manifest {
    homePage = 'http://github.com/dsarov/ARDaP'
    description = 'Comprehensive resistance detection from WGS'
    mainScript = 'main.nf'
    version = '1.9'
}
